sum(hopkins$Country_Region == "US")
View(hopkins)
########## Census data
# Population-Size, International Migration, Domestic Migration, Births, Deaths
census1 <- read.delim(file = "co-est2019-alldata.csv", header = TRUE, sep = ",")
# Hopkins data
# Read in data
hopkins <- read.delim(file = "20200523_Hopkins_dailyreport_all_counties.txt", header = TRUE, sep = ",")
# Select only US counties (rows with non-NA values in "FIPS" column)
# FIPS= Federal Information Processing Standards code that uniquely identifies counties within the USA
hopkins <- hopkins[!is.na(hopkins$FIPS),]
colnames(census1)
View(census1)
?pmatch
pmatch(colnames(census1), "2019")
pmatch( "2019", colnames(census1))
"2019" %in% colnames(census1)
charmatch("2019", table = colnames(census1))
charmatch(table = "2019",  = colnames(census1))
charmatch(table = "2019", x  = colnames(census1))
# Specify fields (for details see:
# https://www2.census.gov/programs-surveys/popest/technical-documentation/file-layouts/2010-2019/co-est2019-alldata.pdf)
fields <- c("STATE", "COUNTY", "STNAME", "CTYNAME",
"POPESTIMATE2019", "NPOPCHG2019",
"BIRTHS2019", "DEATHS2019", "NATURALINC2019",
"INTERNATIONALMIG2019", "DOMESTICMIG2019", "NETMIG2019",
"RESIDUAL2019", "GQESTIMATES2019", "RDEATH2019",
"RNATURALINC2019", "RINTERNATIONALMIG2019", "RDOMESTICMIG2019", "RNETMIG2019")
census1 <- census1[, fields]
census1 <- census1[fields, ]
census1 <- census1$fields
########## Census data
# Population-Size, International Migration, Domestic Migration, Births, Deaths
census1 <- read.delim(file = "co-est2019-alldata.csv", header = TRUE, sep = ",")
# Specify fields (for details see:
# https://www2.census.gov/programs-surveys/popest/technical-documentation/file-layouts/2010-2019/co-est2019-alldata.pdf)
fields <- c("STATE", "COUNTY", "STNAME", "CTYNAME",
"POPESTIMATE2019", "NPOPCHG2019",
"BIRTHS2019", "DEATHS2019", "NATURALINC2019",
"INTERNATIONALMIG2019", "DOMESTICMIG2019", "NETMIG2019",
"RESIDUAL2019", "GQESTIMATES2019", "RDEATH2019",
"RNATURALINC2019", "RINTERNATIONALMIG2019", "RDOMESTICMIG2019", "RNETMIG2019")
census1 <- census1$fields
########## Census data
# Population-Size, International Migration, Domestic Migration, Births, Deaths
census1 <- read.delim(file = "co-est2019-alldata.csv", header = TRUE, sep = ",")
# Specify fields (for details see:
# https://www2.census.gov/programs-surveys/popest/technical-documentation/file-layouts/2010-2019/co-est2019-alldata.pdf)
fields <- c("STATE", "COUNTY", "STNAME", "CTYNAME",
"POPESTIMATE2019", "NPOPCHG2019",
"BIRTHS2019", "DEATHS2019", "NATURALINC2019",
"INTERNATIONALMIG2019", "DOMESTICMIG2019", "NETMIG2019",
"RESIDUAL2019", "GQESTIMATES2019", "RDEATH2019",
"RNATURALINC2019", "RINTERNATIONALMIG2019", "RDOMESTICMIG2019", "RNETMIG2019")
census1 <- census1[, fields]
census1 <- census1[fields,]
View(census1)
########## Census data
# Population-Size, International Migration, Domestic Migration, Births, Deaths
census1 <- read.delim(file = "co-est2019-alldata.csv", header = TRUE, sep = ",")
View(census1)
census1 <- census1[, fields]
census1[REGION,]
census1["REGION",]
census1[,"REGION"]
census1 <- census1[, fields]
fields == colnames(census1)
as.character(fields) == colnames(census1)
as.character(fields) == as.character(colnames(census1))
colnames(census1)
# Specify fields (for details see:
# https://www2.census.gov/programs-surveys/popest/technical-documentation/file-layouts/2010-2019/co-est2019-alldata.pdf)
fields <- c("STATE", "COUNTY", "STNAME", "CTYNAME")
census1 <- census1[, fields]
########## Census data
# Population-Size, International Migration, Domestic Migration, Births, Deaths
census1 <- read.delim(file = "co-est2019-alldata.csv", header = TRUE, sep = ",")
# Specify fields (for details see:
# https://www2.census.gov/programs-surveys/popest/technical-documentation/file-layouts/2010-2019/co-est2019-alldata.pdf)
fields <- c("STATE", "COUNTY", "STNAME", "CTYNAME",
"POPESTIMATE2019", "NPOPCHG_2019",
"BIRTHS2019", "DEATHS2019", "NATURALINC2019",
"INTERNATIONALMIG2019", "DOMESTICMIG2019", "NETMIG2019",
"RESIDUAL2019", "GQESTIMATES2019", "RDEATH2019",
"RNATURALINC2019", "RINTERNATIONALMIG2019", "RDOMESTICMIG2019", "RNETMIG2019")
census1 <- census1[, fields]
# Create FIPS values
census$FIPS <- census$STATE * 1000 + census$COUNTY
# Create FIPS values
census1$FIPS <- census1$STATE * 1000 + census1$COUNTY
# Take only counties with FIPS values in the census FIPS
table_FIPS <- table[table$FIPS %in% census$FIPS,]
# Take only counties with FIPS values in the census FIPS
table_FIPS <- hopkins[hopkins$FIPS %in% census1$FIPS,]
rm(table_FIPS)
# Subset Hopkins data further:
# Take only counties with FIPS values in the census FIPS (reduction from 3001 to 2938)
hopkins_FIPS <- hopkins[hopkins$FIPS %in% census1$FIPS,]
# Merge
merged <- cbind(hopkins_FIPS, census1[census1$FIPS == hopkins_FIPS$FIPS, ])
View(hopkins_FIPS)
# Merge
merged <- cbind(hopkins_FIPS, census1[as.character(census1$FIPS) == as.character(hopkins_FIPS$FIPS), ])
# Merge
merged <- cbind(hopkins_FIPS, census1[census1$FIPS == hopkins_FIPS$FIPS, fields])
census1$FIPS == hopkins_FIPS$FIPS
census1$FIPS %in% hopkins_FIPS$FIPS
sum(census1$FIPS %in% hopkins_FIPS$FIPS)
# Merge
merged <- cbind(hopkins_FIPS, census1[census1$FIPS %in% hopkins_FIPS$FIPS, fields])
View(merged)
# Merge
merged <- cbind(hopkins_FIPS, census1[census1$FIPS == hopkins_FIPS$FIPS, fields])
# Merge
merged <- cbind(hopkins_FIPS, census1["FIPS" == hopkins_FIPS$FIPS, fields])
# Merge
merged <- cbind(hopkins_FIPS, census1["FIPS" == hopkins_FIPS$FIPS, ])
########## Census data
# Population-Size, International Migration, Domestic Migration, Births, Deaths
census1 <- read.delim(file = "co-est2019-alldata.csv", header = TRUE, sep = ",")
# Specify fields (for details see:
# https://www2.census.gov/programs-surveys/popest/technical-documentation/file-layouts/2010-2019/co-est2019-alldata.pdf)
fields <- c("STATE", "COUNTY", "STNAME", "CTYNAME",
"POPESTIMATE2019", "NPOPCHG_2019",
"BIRTHS2019", "DEATHS2019", "NATURALINC2019",
"INTERNATIONALMIG2019", "DOMESTICMIG2019", "NETMIG2019",
"RESIDUAL2019", "GQESTIMATES2019", "RDEATH2019",
"RNATURALINC2019", "RINTERNATIONALMIG2019", "RDOMESTICMIG2019", "RNETMIG2019")
census1 <- census1[, fields]
# Create FIPS values and set as rownames
rownames(census1) <- census1$STATE * 1000 + census1$COUNTY
# Merge
merged <- cbind(hopkins_FIPS, census1[hopkins_FIPS$FIPS, ])
View(merged)
census1[hopkins_FIPS$FIPS[1], 1]
census1[hopkins_FIPS$FIPS[1], ]
census1[as.character(hopkins_FIPS$FIPS[1]), ]
# Merge
merged <- cbind(hopkins_FIPS, census1[as.character(hopkins_FIPS$FIPS), ])
View(merged)
View(hopkins_FIPS)
# Set working directory
setwd("D:/BDC2020/bdc2020/Hopkinsdata/")
# Hopkins data
# Read in data
hopkins <- read.delim(file = "20200523_Hopkins_dailyreport_all_counties.txt", header = TRUE, sep = ",")
View(hopkins)
# Select only US counties (rows with non-NA values in "FIPS" column)
# FIPS= Federal Information Processing Standards code that uniquely identifies counties within the USA
hopkins <- hopkins[!is.na(hopkins$FIPS),]
View(hopkins)
########## Census data
# Population-Size, International Migration, Domestic Migration, Births, Deaths
census1 <- read.delim(file = "co-est2019-alldata.csv", header = TRUE, sep = ",")
View(census1)
# Specify fields (for details see:
# https://www2.census.gov/programs-surveys/popest/technical-documentation/file-layouts/2010-2019/co-est2019-alldata.pdf)
fields <- c("STATE", "COUNTY", "STNAME", "CTYNAME",
"POPESTIMATE2019", "NPOPCHG_2019",
"BIRTHS2019", "DEATHS2019", "NATURALINC2019",
"INTERNATIONALMIG2019", "DOMESTICMIG2019", "NETMIG2019",
"RESIDUAL2019", "GQESTIMATES2019", "RDEATH2019",
"RNATURALINC2019", "RINTERNATIONALMIG2019", "RDOMESTICMIG2019", "RNETMIG2019")
census1 <- census1[, fields]
# Create FIPS values and set as rownames
rownames(census1) <- census1$STATE * 1000 + census1$COUNTY
# Subset Hopkins data further:
# Take only counties with FIPS values in the census FIPS (reduction from 3001 to 2938)
hopkins_FIPS <- hopkins[hopkins$FIPS %in% census1$FIPS,]
c(1, 2, 3, 4)
5 %in% c(1, 2, 3, 4)
4 %in% c(1, 2, 3, 4)
# Merge
merged <- cbind(hopkins_FIPS, census1[as.character(hopkins_FIPS$FIPS), ])
# Set working directory
setwd("D:/BDC2020/bdc2020/Hopkinsdata/")
# Hopkins data
# Read in data
hopkins <- read.delim(file = "20200523_Hopkins_dailyreport_all_counties.txt", header = TRUE, sep = ",")
# Select only US counties (rows with non-NA values in "FIPS" column)
# FIPS= Federal Information Processing Standards code that uniquely identifies counties within the USA
hopkins <- hopkins[!is.na(hopkins$FIPS),]
########## Census data
# Population-Size, International Migration, Domestic Migration, Births, Deaths
census1 <- read.delim(file = "co-est2019-alldata.csv", header = TRUE, sep = ",")
# Specify fields (for details see:
# https://www2.census.gov/programs-surveys/popest/technical-documentation/file-layouts/2010-2019/co-est2019-alldata.pdf)
fields <- c("STATE", "COUNTY", "STNAME", "CTYNAME",
"POPESTIMATE2019", "NPOPCHG_2019",
"BIRTHS2019", "DEATHS2019", "NATURALINC2019",
"INTERNATIONALMIG2019", "DOMESTICMIG2019", "NETMIG2019",
"RESIDUAL2019", "GQESTIMATES2019", "RDEATH2019",
"RNATURALINC2019", "RINTERNATIONALMIG2019", "RDOMESTICMIG2019", "RNETMIG2019")
# Create FIPS values and set as rownames
rownames(census1) <- census1$STATE * 1000 + census1$COUNTY
census1 <- census1[, fields]
# Subset Hopkins data further:
# Take only counties with FIPS values in the census FIPS (reduction from 3001 to 2938)
hopkins_FIPS <- hopkins[hopkins$FIPS %in% census1$FIPS,]
# Merge
merged <- cbind(hopkins_FIPS, census1[as.character(hopkins_FIPS$FIPS), ])
# Subset Hopkins data further:
# Take only counties with FIPS values in the census FIPS (reduction from 3001 to 2938)
hopkins_FIPS <- hopkins[hopkins$FIPS %in% rownames(census1),]
# Merge
merged <- cbind(hopkins_FIPS, census1[as.character(hopkins_FIPS$FIPS), ])
View(hopkins_FIPS)
colnames(merged)
merged <- merged[!c("STATE", "COUNTY", "STNAME", "CTYNAME"),]
merged <- merged[colnames(merged) != c("STATE", "COUNTY", "STNAME", "CTYNAME"),]
# Merge
merged <- cbind(hopkins_FIPS, census1[as.character(hopkins_FIPS$FIPS), ])
merged <- merged[,!(colnames(merged) %in% c("STATE", "COUNTY", "STNAME", "CTYNAME"))]
colnames(merged)
write.csv(merged, "merged1.csv")
?write.csv
# MEANS OF TRANSPORTATION TO WORK BY PLACE OF WORK--STATE AND COUNTY LEVEL
# https://www.census.gov/content/census/en/data/datasets/2017/econ/cbp/2017-cbp.html
merged2 <- read.delim(file = "merged1.csv", header = TRUE, sep = ",")
View(merged2)
write.csv(merged, "merged1.csv", row.names = FALSE)
# MEANS OF TRANSPORTATION TO WORK BY PLACE OF WORK--STATE AND COUNTY LEVEL
# https://www.census.gov/content/census/en/data/datasets/2017/econ/cbp/2017-cbp.html
merged2 <- read.delim(file = "merged1.csv", header = TRUE, sep = ",")
View(merged2)
merged == merged2
all(merged == merged2)
rm(merged2)
# MEANS OF TRANSPORTATION TO WORK BY PLACE OF WORK--STATE AND COUNTY LEVEL
# https://www.census.gov/content/census/en/data/datasets/2017/econ/cbp/2017-cbp.html
census2 <- read.delim(file = "ACSDT1Y2018.B08130_data_with_overlays_2020-05-25T235204.csv", header = TRUE, sep = ",")
# Another one?
# https://www.census.gov/data/tables/2015/demo/metro-micro/commuting-flows-2015.html
# Universe: Workers 16 years and over.
census2 <- read.delim(file = "5year ACS commuting flows.csv", header = TRUE, sep = ",")
View(census2)
census2 <- census2[, !(colnames(census2) %in% c("X", "X.1", "X.2", "X.3"))]
View(census2)
colnames(census2)
############ MEANS OF TRANSPORTATION TO WORK BY PLACE OF WORK--STATE AND COUNTY LEVEL
# https://www.census.gov/content/census/en/data/datasets/2017/econ/cbp/2017-cbp.html
census2 <- read.delim(file = "ACSDT1Y2018.B08130_data_with_overlays_2020-05-25T235204.csv", header = TRUE, sep = ",")
# Another one?
# https://www.census.gov/data/tables/2015/demo/metro-micro/commuting-flows-2015.html
# Universe: Workers 16 years and over.
census2 <- read.delim(file = "5year ACS commuting flows.csv", header = TRUE, sep = ",")
# Specify fields (for details see:
fields <- c("State.FIPS.Code", "County.FIPS.Code",
"State.FIPS.Code.1", "County.FIPS.Code.1",
"Workers.in.Commuting.Flow")
census2 <- census2[, fields]
# Create FIPS values and set as rownames
census2$FIPS <- census2$State.FIPS.Code * 1000 + census2$County.FIPS.Code
# Remove counties (rows) with NAs
census2 <- census2[complete.cases(census2), ]
############ MEANS OF TRANSPORTATION TO WORK BY PLACE OF WORK--STATE AND COUNTY LEVEL
# https://www.census.gov/content/census/en/data/datasets/2017/econ/cbp/2017-cbp.html
census2 <- read.delim(file = "ACSDT1Y2018.B08130_data_with_overlays_2020-05-25T235204.csv", header = TRUE, sep = ",")
# Another one?
# https://www.census.gov/data/tables/2015/demo/metro-micro/commuting-flows-2015.html
# Universe: Workers 16 years and over.
census2 <- read.delim(file = "5year ACS commuting flows.csv", header = TRUE, sep = ",")
sum(is.na(census2$County.FIPS.Code.1))
139435
# Another one?
# https://www.census.gov/data/tables/2015/demo/metro-micro/commuting-flows-2015.html
# Universe: Workers 16 years and over.
census2 <- read.delim(file = "5year ACS commuting flows.csv", header = TRUE, sep = ",")
# Specify fields (for details see:
fields <- c("State.FIPS.Code", "County.FIPS.Code",
"State.FIPS.Code.1", "County.FIPS.Code.1",
"Workers.in.Commuting.Flow")
census2 <- census2[, fields]
# Remove counties (rows) with NAs
census2 <- census2[complete.cases(census2), ]
139435-137806
# Remove counties (rows) with NAs
census2 <- census2[complete.cases(census2), ]
# Create FIPS values and set as rownames
census2$FIPS <- census2$State.FIPS.Code * 1000 + census2$County.FIPS.Code
census2$FIPS.1 <- census2$State.FIPS.Code.1 * 1000 + census2$County.FIPS.Code.1
counts <- integer(max(census2$FIPS.1))
?nrow()
counts <- integer(max(census2$FIPS.1))
for (i in nrow(census2)) {
counts[census2[i, "FIPS.1"]] <- counts[census2[i, "FIPS.1"]] + counts[census2[i, "Workers.in.Commuting.Flow"]]
}
counts <- integer(max(census2$FIPS.1))
for (i in nrow(census2)) {
counts[census2[i, "FIPS.1"]] <- counts[census2[i, "FIPS.1"]] + census2[i, "Workers.in.Commuting.Flow"]
}
counts <- integer(max(census2$FIPS.1))
for (i in nrow(census2)) {
counts[as.integer(census2[i, "FIPS.1"])] <- counts[as.integer(census2[i, "FIPS.1"])] + census2[i, "Workers.in.Commuting.Flow"]
}
counts <- integer(max(census2$FIPS.1))
for (i in nrow(census2)) {
counts[as.integer(census2[i, "FIPS.1"])] <- as.integer(counts[as.integer(census2[i, "FIPS.1"])]) + as.integer(census2[i, "Workers.in.Commuting.Flow"])
}
sum(counts)
nrow(census2)
for (i in 1:nrow(census2)) {
counts[as.integer(census2[i, "FIPS.1"])] <- as.integer(counts[as.integer(census2[i, "FIPS.1"])]) + as.integer(census2[i, "Workers.in.Commuting.Flow"])
}
sum(counts)
save.image("D:/BDC2020/bdc2020/Hopkinsdata/HopkinsData_environment.RData")
colnames(merged)
# Merge
merged$WorkersInCommutingFlow <- integer(nrow(merged))
sum(merged$WorkersInCommutingFlow)
for (i in 1:nrow(merged)) {
merged[i, "WorkersInCommutingFlow"] <- counts[as.integer(rownames(merged)[i])]
}
View(merged)
sum(counts)
for (i in 1:nrow(merged)) {
merged[i, "WorkersInCommutingFlow"] <- as.integer(counts[as.integer(rownames(merged)[i])])
}
# Merge
merged$WorkersInCommutingFlow <- integer(nrow(merged))
for (i in 1:nrow(merged)) {
merged[i, "WorkersInCommutingFlow"] <- counts[merged$FIPS[i]]
}
sum(is.na(merged$WorkersInCommutingFlow))
counts[45001]
View(census2)
# Another one?
# https://www.census.gov/data/tables/2015/demo/metro-micro/commuting-flows-2015.html
# Universe: Workers 16 years and over.
census2 <- read.delim(file = "5year ACS commuting flows.csv", header = TRUE, sep = ",")
# Specify fields (for details see:
fields <- c("State.FIPS.Code", "County.FIPS.Code",
"State.FIPS.Code.1", "County.FIPS.Code.1",
"Workers.in.Commuting.Flow")
census2 <- census2[, fields]
# Remove counties (rows) with NAs
census2 <- census2[complete.cases(census2), ]
# Create FIPS values and set as rownames
census2$FIPS <- census2$State.FIPS.Code * 1000 + census2$County.FIPS.Code
census2$FIPS.1 <- census2$State.FIPS.Code.1 * 1000 + census2$County.FIPS.Code.1
counts <- integer(max(census2$FIPS.1))
census2[1, "FIPS.1"]
sum(counts)
# Count number of workers for each work county (FIPS.1)
counts <- integer(max(census2$FIPS.1))
for (i in 1:nrow(census2)) {
counts[as.integer(census2$FIPS.1[i])] <- as.integer(counts[as.integer(census2$FIPS.1[i])]) + as.integer(census2$Workers.in.Commuting.Flow[i])
}
sum(counts)
sum(census2$Workers.in.Commuting.Flow)
sum(as.integer(census2$Workers.in.Commuting.Flow))
# Create new field in merge and add data
merged$WorkersInCommutingFlow <- integer(nrow(merged))
for (i in 1:nrow(merged)) {
merged$WorkersInCommutingFlow[i] <- counts[merged$FIPS[i]]
}
counts[1001]
# Another one?
# https://www.census.gov/data/tables/2015/demo/metro-micro/commuting-flows-2015.html
# Universe: Workers 16 years and over.
census2 <- read.delim(file = "5year ACS commuting flows.csv", header = TRUE, sep = ",")
# Specify fields (for details see:
fields <- c("State.FIPS.Code", "County.FIPS.Code",
"State.FIPS.Code.1", "County.FIPS.Code.1",
"Workers.in.Commuting.Flow")
census2 <- census2[, fields]
# Remove counties (rows) with NAs
census2 <- census2[complete.cases(census2), ]
# Create FIPS values for home (FIPS) and work (FIPS.1) counties
census2$FIPS.1 <- census2$State.FIPS.Code.1 * 1000 + census2$County.FIPS.Code.1
# Count number of workers for each work county (FIPS.1)
counts <- integer(max(census2$FIPS.1))
sum(counts)
# Count number of workers for each work county (FIPS.1)
counts <- integer(max(census2$FIPS.1))
for (i in 1:nrow(census2)) {
counts[as.integer(census2$FIPS.1[i])] <- as.integer(counts[as.integer(census2$FIPS.1[i])]) + as.integer(census2$Workers.in.Commuting.Flow[i])
}
sum(counts)
sum(census2$Workers.in.Commuting.Flow)
sum(as.integer(census2$Workers.in.Commuting.Flow))
# Create new field in merge and add data
merged$WorkersInCommutingFlow <- integer(nrow(merged))
sum(merged$WorkersInCommutingFlow)
for (i in 1:nrow(merged)) {
merged$WorkersInCommutingFlow[i] <- as.integer(counts[as.integer(merged$FIPS[i])])
}
sum(merged$WorkersInCommutingFlow)
sum(counts)
counts[1001]
counts[1001]
# Count number of workers for each work county (FIPS.1)
counts <- integer(max(census2$FIPS.1))
counts[1000]
for (i in 1:nrow(census2)) {
counts[as.integer(census2$FIPS.1[i])] <- as.integer(counts[as.integer(census2$FIPS.1[i])]) + as.integer(census2$Workers.in.Commuting.Flow[i])
}
counts[1000]
counts[length(counts)]
counts[length(counts)+1]
counts[length(counts)-1]
length(counts)
# Count number of workers for each work county (FIPS.1)
counts <- integer(max(census2$FIPS.1))
i = 1
counts[as.integer(census2$FIPS.1[i])] <- as.integer(counts[as.integer(census2$FIPS.1[i])]) + as.integer(census2$Workers.in.Commuting.Flow[i])
counts[i]
counts[1001]
View(census2)
# Count number of workers for each work county (FIPS.1)
counts <- integer(max(census2$FIPS.1))
i <- 2
counts[as.integer(census2$FIPS.1[i])] <- as.integer(counts[as.integer(census2$FIPS.1[i])]) + as.integer(census2$Workers.in.Commuting.Flow[i])
counts[1013]
# Count number of workers for each work county (FIPS.1)
counts <- integer(max(census2$FIPS.1))
i <- 1
x <- as.integer(counts[as.integer(census2$FIPS.1[i])])
counts[as.integer(census2$FIPS.1[i])] <- x + as.integer(census2$Workers.in.Commuting.Flow[i])
as.integer(census2$Workers.in.Commuting.Flow[i])
census2$Workers.in.Commuting.Flow[i]
type(census2$Workers.in.Commuting.Flow[i])
typeof(census2$Workers.in.Commuting.Flow[i])
# Count number of workers for each work county (FIPS.1)
counts <- integer(max(census2$FIPS.1))
for (i in 1:nrow(census2)) {
counts[census2$FIPS.1[i]] <- counts[census2$FIPS.1[i]] + census2$Workers.in.Commuting.Flow[i]
}
counts[1001]
typeof(census2$FIPS.1[i])
# Count number of workers for each work county (FIPS.1)
counts <- integer(max(census2$FIPS.1))
for (i in 1:nrow(census2)) {
counts[as.integer(census2$FIPS.1[i])] <- counts[as.integer(census2$FIPS.1[i])] + census2$Workers.in.Commuting.Flow[i]
}
counts[1001]
census2$FIPS.1[i]
# Count number of workers for each work county (FIPS.1)
counts <- integer(max(census2$FIPS.1))
for (i in 1:nrow(census2)) {
x <- as.integer(counts[as.integer(census2$FIPS.1[i])])
counts[as.integer(census2$FIPS.1[i])] <- x + census2$Workers.in.Commuting.Flow[i]
}
counts[1001]
census2$Workers.in.Commuting.Flow[i]
typeof(census2$Workers.in.Commuting.Flow[i])
i = 1
x <- as.integer(counts[as.integer(census2$FIPS.1[i])])
counts[as.integer(census2$FIPS.1[i])] <- x + census2$Workers.in.Commuting.Flow[i]
census2$Workers.in.Commuting.Flow[i] + 1
census2$Workers.in.Commuting.Flow[i][1] + 1
x <- census2$Workers.in.Commuting.Flow[i]
View(x)
View(census2)
x[1]
x[1, 1]
x[0]
x[1, 1]
x[2]
x[1]
sum(x[1])
sum(x)
as.numerirc(census2$Workers.in.Commuting.Flow[i])
as.numeric(census2$Workers.in.Commuting.Flow[i])
as.numeric(levels(x))[x]
as.numeric(as.character(x))
as.numeric(as.character(census2$Workers.in.Commuting.Flow[i]))
i = 1
as.numeric(as.character(census2$Workers.in.Commuting.Flow[i]))
as.matrix(census2$Workers.in.Commuting.Flow[i])
as.matrix(census2$Workers.in.Commuting.Flow[i])[1]
as.matrix(census2$Workers.in.Commuting.Flow[i])[1,1
]
as.numeric(as.matrix(census2$Workers.in.Commuting.Flow[i]))
as.numeric(as.character(as.matrix(census2$Workers.in.Commuting.Flow[i])))
as.character(as.matrix(census2$Workers.in.Commuting.Flow[i])
)
as.character(as.matrix(census2$Workers.in.Commuting.Flow[i])))
as.integer(as.character(as.matrix(census2$Workers.in.Commuting.Flow[i]))
)
as.numeric(paste(census2$Workers.in.Commuting.Flow[i]))
as.numeric(levels(census2$Workers.in.Commuting.Flow[i]))
as.numeric(levels(census2$Workers.in.Commuting.Flow[i]))[census2$Workers.in.Commuting.Flow[i]]
?gsub
# Format numbers
census2$Workers.in.Commuting.Flow <- gsub(pattern = ",",replacement = "", x = census2$Workers.in.Commuting.Flow)
# Count number of workers for each work county (FIPS.1)
counts <- integer(max(census2$FIPS.1))
for (i in 1:nrow(census2)) {
x <- as.integer(counts[as.integer(census2$FIPS.1[i])])
counts[as.integer(census2$FIPS.1[i])] <- x + census2$Workers.in.Commuting.Flow[i]
}
# Count number of workers for each work county (FIPS.1)
counts <- integer(max(census2$FIPS.1))
for (i in 1:nrow(census2)) {
x <- as.integer(counts[as.integer(census2$FIPS.1[i])])
counts[as.integer(census2$FIPS.1[i])] <- x + as.numeric(as.character(census2$Workers.in.Commuting.Flow[i]))
}
counts[1001]
# Create new field in merge and add data
merged$WorkersInCommutingFlow <- integer(nrow(merged))
for (i in 1:nrow(merged)) {
merged$WorkersInCommutingFlow[i] <- as.integer(counts[as.integer(merged$FIPS[i])])
}
# Create new field in merge and add data
merged$WorkersInCommutingFlow <- integer(nrow(merged))
for (i in 1:nrow(merged)) {
merged$WorkersInCommutingFlow[i] <- as.integer(counts[as.integer(merged$FIPS[i])])
}
# Write to file
write.csv(merged, "merged2.csv", row.names = FALSE)
save.image("D:/BDC2020/bdc2020/Hopkinsdata/HopkinsData_environment.RData")
